// Напишите программу, которая на вход принимает число 
// и выдаёт его квадрат (число умноженное на само себя)
//
// Например:
// 4 -> 16
// -3 -> 9
// -7 -> 49
// (Console.ReadLine - по умолчанию работает со строкой. То есть, всё что мы в строке введём, 
// не только числа, но и символы,буквы, и т.п. И в С# - изначально заложено, 
// что ReadLine работает с типом string. Но нам нужно забрать от туда число! Нам нужно его потом перемножать.
// Поэтому нужно использовать конвертацию из string - строки в число, т.е. преобразовать. 
// Используем команду int.Parse - она рабатает со строками и в неё помещаем нашу команду, исп-я скобки(Console.ReadLine()!)
// И эта наша команда конвертирует (Console.ReadLine()!) в int.
// Итог:  int.Parse(Console.ReadLine()!)   То есть мы спарсим из строки в число)

Console.Write("Введите число: ");
int number = int.Parse(Console.ReadLine()!);
// Консоль Write в одну строку напишет Введите число и сразу запросит его у пользователя
// и вернёт в числовом виде за счёт int.Parse.
// Некорректный формат warning CS8604: Возможно, аргумент-ссылка, допускающий значение NULL, для параметра "s" в "int int.Par 
// se(string s)". [C:\Users\днс\C#\task0\task0.csproj] - СТАВИМ ! - И ПРОБЛЕМА НЕ РЕШАЕТСЯ, А ИГНОРИРУЕТСЯ.
// Если написать текст - то система выдаст ошибку, так как у нас int.Parse - переводит из строки в число.
// Так как нельзя перевести символы в число. У нас строгая типизация.
// Теперь нужно где-то сохранить число и умножить само не себя
// Мы можем инициализировать ещё одну переменную, говорим что у нас также int - целочисленный тип.
int result = number*number;
// Осталось показать всё это на консоль
Console.WriteLine("Квадрат числа = " + result);
// через "+" мы можем собирать какие-то наши сообщения и значения наших переменных, 
// т.е. + это как склеивание строки.Т.е.мы можем в одной команде ("Квадрат числа = " + result)
// прописать как сообщение, так и + плюсом вывести наш результат.